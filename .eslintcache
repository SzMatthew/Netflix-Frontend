[{"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\index.js":"1","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\reportWebVitals.js":"2","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\App.js":"3","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Contexts\\search-context.js":"4","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Contexts\\order-by-context.js":"5","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Contexts\\category-context.js":"6","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\Header\\Header.js":"7","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\MovieListContainer\\MovieListContainer.js":"8","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\404Page\\RoutingErrorPage.js":"9","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\Add-EditMovieForm\\AddEditMovieForm.js":"10","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\MovieCard\\MovieCard.js":"11","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\hooks\\useQuery.js":"12","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\Navbar\\Navbar.js":"13","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\MovieDetails\\MovieDetails.js":"14","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\DeleteMovieModal\\DeleteMovieModal.js":"15","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\MultiSelect\\MultiSelect.js":"16"},{"size":590,"mtime":1612522829776,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1612183941846,"results":"19","hashOfConfig":"18"},{"size":1134,"mtime":1612450619627,"results":"20","hashOfConfig":"18"},{"size":1120,"mtime":1612183941837,"results":"21","hashOfConfig":"18"},{"size":1187,"mtime":1612183941837,"results":"22","hashOfConfig":"18"},{"size":1191,"mtime":1612183941837,"results":"23","hashOfConfig":"18"},{"size":2308,"mtime":1612450494486,"results":"24","hashOfConfig":"18"},{"size":2858,"mtime":1612183941835,"results":"25","hashOfConfig":"18"},{"size":671,"mtime":1612183941829,"results":"26","hashOfConfig":"18"},{"size":8907,"mtime":1612531545778,"results":"27","hashOfConfig":"18"},{"size":3252,"mtime":1612450481513,"results":"28","hashOfConfig":"18"},{"size":215,"mtime":1612183941845,"results":"29","hashOfConfig":"18"},{"size":2127,"mtime":1612263271928,"results":"30","hashOfConfig":"18"},{"size":1857,"mtime":1612183941834,"results":"31","hashOfConfig":"18"},{"size":1344,"mtime":1612267719568,"results":"32","hashOfConfig":"18"},{"size":2561,"mtime":1612532666370,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q05yl5",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\index.js",[],"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\reportWebVitals.js",[],["70","71"],"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\App.js",[],"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Contexts\\search-context.js",[],"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Contexts\\order-by-context.js",[],"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Contexts\\category-context.js",[],"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\Header\\Header.js",[],"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\MovieListContainer\\MovieListContainer.js",["72","73"],"import React, {useState, useEffect} from 'react';\r\nimport {useCategory} from '../../Contexts/category-context';\r\nimport {useOrderBy} from '../../Contexts/order-by-context';\r\nimport {useSearch} from '../../Contexts/search-context';\r\nimport { useQuery } from '../../hooks/useQuery';\r\nimport MovieCard from '../MovieCard/MovieCard';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport MovieDetails from '../MovieDetails/MovieDetails';\r\nimport notFoundSVG from '../../Images/empty.svg';\r\nimport './MovieListContainer.scss';\r\nimport {useRouteMatch, Switch, Route} from 'react-router-dom';\r\n\r\n\r\nconst MovieListContainer = () => {\r\n    const {state: {category}, setCategory}        = useCategory();\r\n    const {state: {orderBy}, setOrderBy}          = useOrderBy();\r\n    const {state: {searchWord}}                   = useSearch();\r\n    const [movies, setMovies]                     = useState([]);\r\n    const [totalMovieAmount, setTotalMovieAmount] = useState(0);\r\n    const categoryQueryParam                      = useQuery().get('category');\r\n    const {path}                                  = useRouteMatch();\r\n    const orderByQueryParam                       = useQuery().get('orderBy');\r\n\r\n    useEffect(() => setCategory(categoryQueryParam), [categoryQueryParam]);\r\n    useEffect(() => setOrderBy(orderByQueryParam), [orderByQueryParam]);\r\n\r\n    // eslint-disable-next-line\r\n    useEffect(() => getMovies(), [category, orderBy, searchWord]);\r\n\r\n    const getMovies = () => { \r\n        fetch('http://localhost:4000/movies?limit=100&filter=' + (category === 'all' ? '' : category) + `&sortBy=${orderBy}&sortOrder=desc&search=${searchWord}&searchBy=title`)\r\n            .then(res => res.json())\r\n            .then(\r\n                ({data}) => {\r\n                    setMovies(data);\r\n                    setTotalMovieAmount(data.length);\r\n                }\r\n            );\r\n    }\r\n\r\n    const NoMovieToList = () => { \r\n        return (\r\n            <div className=\"warning-row\">\r\n                <p>There is no movie to list!</p>\r\n                <img src={notFoundSVG} alt=\"Not Found\"/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route path={`${path}/:id`}>\r\n                    <MovieDetails/>\r\n                </Route>\r\n            </Switch>\r\n            <main>\r\n                <Navbar/>\r\n                <section className=\"movie-count\"><b>{totalMovieAmount}</b> film listed</section>\r\n                <section className='movie-list-container'>\r\n                    {\r\n                        (movies.length === 0)\r\n                            ? <NoMovieToList />\r\n                            : movies.map(movie => <MovieCard key={movie.id} movie={movie} />)\r\n                    }\r\n                </section>\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MovieListContainer;","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\404Page\\RoutingErrorPage.js",[],"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\Add-EditMovieForm\\AddEditMovieForm.js",["74"],"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\MovieCard\\MovieCard.js",[],"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\hooks\\useQuery.js",[],"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\Navbar\\Navbar.js",["75"],"import React from 'react';\r\nimport { useCategory } from '../../Contexts/category-context';\r\nimport { useOrderBy } from '../../Contexts/order-by-context';\r\nimport { Link, useRouteMatch } from \"react-router-dom\"\r\nimport './Navbar.scss';\r\n\r\nconst Navbar = () => { \r\n    const {state: {category}, setCategory} = useCategory();\r\n    const {state: {orderBy}, setOrderBy} = useOrderBy();\r\n    const {path} = useRouteMatch();\r\n    \r\n    const changeOrderBy = event => setOrderBy(event.target.value)\r\n\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li className={category === 'all' ? 'active' : ''} onClick={() => setCategory('all')}>\r\n                    <Link to={`/movies?category=all&orderBy=${orderBy}`}>ALL</Link>\r\n                </li>\r\n                <li className={category === 'documentary' ? 'active' : ''} onClick={() => setCategory('documentary')}>\r\n                    <Link to={`/movies?category=documentary&orderBy=${orderBy}`}>DOCUMENTARY</Link>\r\n                </li>\r\n                <li className={category === 'comedy' ? 'active' : ''} onClick={() => setCategory('comedy')}>\r\n                    <Link to={`/movies?category=comedy&orderBy=${orderBy}`}>COMEDY</Link>\r\n                </li>\r\n                <li className={category === 'horror' ? 'active' : ''} onClick={() => setCategory('horror')}>\r\n                    <Link to={`/movies?category=horror&orderBy=${orderBy}`}>HORROR</Link>\r\n                </li>\r\n                <li className={category === 'crime' ? 'active' : ''} onClick={() => setCategory('crime')}>\r\n                    <Link to={`/movies?category=crime&orderBy=${orderBy}`}>CRIME</Link>\r\n                </li>\r\n            </ul>\r\n            <ul>\r\n                <li>\r\n                    <span>Sort By:</span>\r\n                    <select onChange={changeOrderBy} className=\"orderBy-select\" value={orderBy}>\r\n                        <option value=\"release_date\">Release Date</option>\r\n                        <option value=\"title\">Title</option>\r\n                    </select>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\MovieDetails\\MovieDetails.js",["76"],"import React, {useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport './MovieDetails.scss';\r\n\r\nconst MovieDetails = () => {\r\n    const {id} = useParams();\r\n    const [movie, setMovie] = useState(null);\r\n\r\n    useEffect(() => getMovie(), [id]);\r\n\r\n    const getMovie = () => { \r\n        fetch(\"http://localhost:4000/movies/\" + id)\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((result) => {\r\n\t\t\t\tsetMovie(result);\r\n\t\t\t});\r\n    }\r\n\r\n    if (movie !== null)\r\n    {\r\n        return (\r\n            <header className=\"movie-header\">\r\n                <div className=\"movie-container\">\r\n                    <img src={movie.poster_path} alt={movie.title}></img>\r\n                    <div className=\"details\">\r\n                        <div className=\"title-score-container\">\r\n                            <h2>{movie.title}</h2>\r\n                            <div className=\"score\">\r\n                                <span>{movie.vote_average}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"tagline\">\r\n                            <span>{movie.tagline}</span>\r\n                        </div>\r\n                        <div className=\"date-minutes-container\">\r\n                            <span>{movie.release_date.split('-')[0]}</span>\r\n                            <span className=\"runtime\">\r\n                                {movie.runtime ? movie.runtime + 'min' : ''}\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"overview\">\r\n                            <p>{movie.overview}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n    else\r\n    {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieDetails;","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\DeleteMovieModal\\DeleteMovieModal.js",[],"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\MultiSelect\\MultiSelect.js",["77","78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":24,"column":54,"nodeType":"85","endLine":24,"endColumn":74,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":25,"column":52,"nodeType":"85","endLine":25,"endColumn":71,"suggestions":"88"},{"ruleId":"83","severity":1,"message":"89","line":30,"column":33,"nodeType":"85","endLine":30,"endColumn":42,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":10,"column":12,"nodeType":"93","messageId":"94","endLine":10,"endColumn":16},{"ruleId":"83","severity":1,"message":"89","line":9,"column":33,"nodeType":"85","endLine":9,"endColumn":37,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":67,"column":28,"nodeType":"98","messageId":"99","endLine":67,"endColumn":30},{"ruleId":"96","severity":1,"message":"97","line":68,"column":30,"nodeType":"98","messageId":"99","endLine":68,"endColumn":32},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCategory'. Either include it or remove the dependency array.","ArrayExpression",["102"],"React Hook useEffect has a missing dependency: 'setOrderBy'. Either include it or remove the dependency array.",["103"],"React Hook useEffect has a missing dependency: 'getMovie'. Either include it or remove the dependency array.",["104"],"no-unused-vars","'path' is assigned a value but never used.","Identifier","unusedVar",["105"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [categoryQueryParam, setCategory]",{"range":"114","text":"115"},"Update the dependencies array to be: [orderByQueryParam, setOrderBy]",{"range":"116","text":"117"},"Update the dependencies array to be: [getMovie, movieId]",{"range":"118","text":"119"},"Update the dependencies array to be: [getMovie, id]",{"range":"120","text":"121"},[1241,1261],"[categoryQueryParam, setCategory]",[1316,1335],"[orderByQueryParam, setOrderBy]",[1266,1275],"[getMovie, movieId]",[271,275],"[getMovie, id]"]