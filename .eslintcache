[{"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\index.js":"1","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\reportWebVitals.js":"2","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\App.js":"3","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Contexts\\search-context.js":"4","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Contexts\\order-by-context.js":"5","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Contexts\\category-context.js":"6","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\Header\\Header.js":"7","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\MovieListContainer\\MovieListContainer.js":"8","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\404Page\\RoutingErrorPage.js":"9","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\Add-EditMovieForm\\AddEditMovieForm.js":"10","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\MovieCard\\MovieCard.js":"11","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\hooks\\useQuery.js":"12","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\Navbar\\Navbar.js":"13","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\MovieDetails\\MovieDetails.js":"14","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\DeleteMovieModal\\DeleteMovieModal.js":"15","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\MultiSelect\\MultiSelect.js":"16","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\StatusResponseModal\\StatusResponseModal.js":"17"},{"size":590,"mtime":1612522829776,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1612183941846,"results":"20","hashOfConfig":"19"},{"size":1134,"mtime":1612450619627,"results":"21","hashOfConfig":"19"},{"size":1120,"mtime":1612183941837,"results":"22","hashOfConfig":"19"},{"size":1187,"mtime":1612183941837,"results":"23","hashOfConfig":"19"},{"size":1191,"mtime":1612183941837,"results":"24","hashOfConfig":"19"},{"size":2330,"mtime":1612783978010,"results":"25","hashOfConfig":"19"},{"size":2856,"mtime":1612782728933,"results":"26","hashOfConfig":"19"},{"size":671,"mtime":1612183941829,"results":"27","hashOfConfig":"19"},{"size":9905,"mtime":1612791881303,"results":"28","hashOfConfig":"19"},{"size":3252,"mtime":1612450481513,"results":"29","hashOfConfig":"19"},{"size":215,"mtime":1612183941845,"results":"30","hashOfConfig":"19"},{"size":2127,"mtime":1612263271928,"results":"31","hashOfConfig":"19"},{"size":1857,"mtime":1612183941834,"results":"32","hashOfConfig":"19"},{"size":1357,"mtime":1612785874388,"results":"33","hashOfConfig":"19"},{"size":2561,"mtime":1612533118574,"results":"34","hashOfConfig":"19"},{"size":1417,"mtime":1612785893478,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1q05yl5",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\index.js",[],["74","75"],"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\reportWebVitals.js",[],"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\App.js",[],"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Contexts\\search-context.js",[],"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Contexts\\order-by-context.js",[],"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Contexts\\category-context.js",[],"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\Header\\Header.js",[],"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\MovieListContainer\\MovieListContainer.js",["76","77"],"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\404Page\\RoutingErrorPage.js",[],"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\Add-EditMovieForm\\AddEditMovieForm.js",["78"],"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\MovieCard\\MovieCard.js",[],"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\hooks\\useQuery.js",[],"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\Navbar\\Navbar.js",["79"],"import React from 'react';\r\nimport { useCategory } from '../../Contexts/category-context';\r\nimport { useOrderBy } from '../../Contexts/order-by-context';\r\nimport { Link, useRouteMatch } from \"react-router-dom\"\r\nimport './Navbar.scss';\r\n\r\nconst Navbar = () => { \r\n    const {state: {category}, setCategory} = useCategory();\r\n    const {state: {orderBy}, setOrderBy} = useOrderBy();\r\n    const {path} = useRouteMatch();\r\n    \r\n    const changeOrderBy = event => setOrderBy(event.target.value)\r\n\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li className={category === 'all' ? 'active' : ''} onClick={() => setCategory('all')}>\r\n                    <Link to={`/movies?category=all&orderBy=${orderBy}`}>ALL</Link>\r\n                </li>\r\n                <li className={category === 'documentary' ? 'active' : ''} onClick={() => setCategory('documentary')}>\r\n                    <Link to={`/movies?category=documentary&orderBy=${orderBy}`}>DOCUMENTARY</Link>\r\n                </li>\r\n                <li className={category === 'comedy' ? 'active' : ''} onClick={() => setCategory('comedy')}>\r\n                    <Link to={`/movies?category=comedy&orderBy=${orderBy}`}>COMEDY</Link>\r\n                </li>\r\n                <li className={category === 'horror' ? 'active' : ''} onClick={() => setCategory('horror')}>\r\n                    <Link to={`/movies?category=horror&orderBy=${orderBy}`}>HORROR</Link>\r\n                </li>\r\n                <li className={category === 'crime' ? 'active' : ''} onClick={() => setCategory('crime')}>\r\n                    <Link to={`/movies?category=crime&orderBy=${orderBy}`}>CRIME</Link>\r\n                </li>\r\n            </ul>\r\n            <ul>\r\n                <li>\r\n                    <span>Sort By:</span>\r\n                    <select onChange={changeOrderBy} className=\"orderBy-select\" value={orderBy}>\r\n                        <option value=\"release_date\">Release Date</option>\r\n                        <option value=\"title\">Title</option>\r\n                    </select>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\MovieDetails\\MovieDetails.js",["80"],"import React, {useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport './MovieDetails.scss';\r\n\r\nconst MovieDetails = () => {\r\n    const {id} = useParams();\r\n    const [movie, setMovie] = useState(null);\r\n\r\n    useEffect(() => getMovie(), [id]);\r\n\r\n    const getMovie = () => { \r\n        fetch(\"http://localhost:4000/movies/\" + id)\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((result) => {\r\n\t\t\t\tsetMovie(result);\r\n\t\t\t});\r\n    }\r\n\r\n    if (movie !== null)\r\n    {\r\n        return (\r\n            <header className=\"movie-header\">\r\n                <div className=\"movie-container\">\r\n                    <img src={movie.poster_path} alt={movie.title}></img>\r\n                    <div className=\"details\">\r\n                        <div className=\"title-score-container\">\r\n                            <h2>{movie.title}</h2>\r\n                            <div className=\"score\">\r\n                                <span>{movie.vote_average}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"tagline\">\r\n                            <span>{movie.tagline}</span>\r\n                        </div>\r\n                        <div className=\"date-minutes-container\">\r\n                            <span>{movie.release_date.split('-')[0]}</span>\r\n                            <span className=\"runtime\">\r\n                                {movie.runtime ? movie.runtime + 'min' : ''}\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"overview\">\r\n                            <p>{movie.overview}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n    else\r\n    {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieDetails;","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\DeleteMovieModal\\DeleteMovieModal.js",[],"D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\MultiSelect\\MultiSelect.js",["81","82"],"import * as React from 'react';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\n\r\nconst MultiSelect = ({name, customOnBlur, onChange, values, options}) => {\r\n    const animatedComponents = makeAnimated();\r\n\r\n    const styleColors = {\r\n        red: '#F65261',\r\n        mid_grey: '#424242',\r\n        white: '#FFFFFF',\r\n        light_grey: '#555555'\r\n    };\r\n\r\n    const customStyles = {\r\n        control: () => ({\r\n            backgroundColor: styleColors.light_grey,\r\n            color: styleColors.white,\r\n            display: 'flex',\r\n            borderRadius: '5px',\r\n            padding: '5px 0px'\r\n        }),\r\n        multiValue: styles => {\r\n            return {\r\n                ...styles,\r\n                backgroundColor: styleColors.mid_grey,\r\n                borderRadius: '5px'\r\n            };\r\n        },\r\n        multiValueLabel: styles => ({\r\n            ...styles,\r\n            color: styleColors.white,\r\n            fontSize: '15px',\r\n            opacity: '0.8',\r\n            fontWeight: '400'\r\n        }),\r\n        clearIndicator: styles => ({\r\n            ...styles,\r\n            '&:hover': {\r\n                color: styleColors.red\r\n            }\r\n        }),\r\n        dropdownIndicator: styles => ({\r\n            ...styles,\r\n            '&:hover': {\r\n                color: styleColors.red\r\n            }\r\n        }),\r\n        option: provided => ({\r\n            ...provided,\r\n            backgroundColor: styleColors.light_grey,\r\n            color: styleColors.white,\r\n            borderRadius: '5px',\r\n            '&:hover': {\r\n                backgroundColor: styleColors.red\r\n            }\r\n        }),\r\n        menu: provided => ({\r\n            ...provided,\r\n            backgroundColor: styleColors.light_grey\r\n        })\r\n    };\r\n\r\n    const defaultValue = () => {\r\n        let defaultValues = [];\r\n\r\n        options.map(option => {\r\n            values.map(value => {\r\n                if (option.label === value)\r\n                    defaultValues = [...defaultValues, option];\r\n            });\r\n        });\r\n\r\n        return defaultValues;\r\n    }\r\n\r\n\r\n    return (\r\n        <Select\r\n            defaultValue={defaultValue()}\r\n            onChange={values => onChange(values.map(value => value.label))}\r\n            onBlur={() => customOnBlur}\r\n            name={name}\r\n            options={options}\r\n            isMulti\r\n            closeMenuOnSelect={false}\r\n            styles={customStyles}\r\n            components={animatedComponents}\r\n        />\r\n    );\r\n}\r\n\r\nexport default MultiSelect;","D:\\Projects\\Netflix Frontend\\Netflix-Frontend\\src\\Components\\StatusResponseModal\\StatusResponseModal.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":23,"column":54,"nodeType":"89","endLine":23,"endColumn":74,"suggestions":"90"},{"ruleId":"87","severity":1,"message":"91","line":24,"column":52,"nodeType":"89","endLine":24,"endColumn":71,"suggestions":"92"},{"ruleId":"87","severity":1,"message":"93","line":33,"column":33,"nodeType":"89","endLine":33,"endColumn":42,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":10,"column":12,"nodeType":"97","messageId":"98","endLine":10,"endColumn":16},{"ruleId":"87","severity":1,"message":"93","line":9,"column":33,"nodeType":"89","endLine":9,"endColumn":37,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":67,"column":28,"nodeType":"102","messageId":"103","endLine":67,"endColumn":30},{"ruleId":"100","severity":1,"message":"101","line":68,"column":30,"nodeType":"102","messageId":"103","endLine":68,"endColumn":32},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCategory'. Either include it or remove the dependency array.","ArrayExpression",["106"],"React Hook useEffect has a missing dependency: 'setOrderBy'. Either include it or remove the dependency array.",["107"],"React Hook useEffect has a missing dependency: 'getMovie'. Either include it or remove the dependency array.",["108"],"no-unused-vars","'path' is assigned a value but never used.","Identifier","unusedVar",["109"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [categoryQueryParam, setCategory]",{"range":"118","text":"119"},"Update the dependencies array to be: [orderByQueryParam, setOrderBy]",{"range":"120","text":"121"},"Update the dependencies array to be: [getMovie, movieId]",{"range":"122","text":"123"},"Update the dependencies array to be: [getMovie, id]",{"range":"124","text":"125"},[1239,1259],"[categoryQueryParam, setCategory]",[1314,1333],"[orderByQueryParam, setOrderBy]",[1504,1513],"[getMovie, movieId]",[271,275],"[getMovie, id]"]